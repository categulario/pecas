---
# Para todos los script
general: 
  pc_pandog: "pc-pandog"
  pc_sandbox: "pc-sandbox"
  pc_tegs: "pc-tegs"
  pc_creator: "pc-creator"
  pc_divider: "pc-divider"
  pc_notes: "pc-notes"
  pc_cites: "pc-cites"
  pc_index: "pc-index"
  pc_recreator: "pc-recreator"
  pc_changer: "pc-changer"
  fin: "¡Operación finalizada exitosamente!\n"
  sin_titulo: "Sin título"
  id_title: "pc-title"
  id_author: "pc-author"
  id_publisher: "pc-publisher"
  meta_data: "meta-data.yaml"
  marca: "--"
  marca_in_1: "("
  marca_in_2: ")"
  ignore: "--ignore--"
  delete: "--delete--"
  note_content: "--note-content--"
  change: ["--change", "--"]
  note: ["--note", "--"]
  error_arg: "\nERROR: argumentos insuficientes. Utiliza -h para ver la ayuda."
  error_arg2: "\nERROR: argumentos inconsistentes. Utiliza -h para ver la ayuda."
  error_directorio: ["\nERROR: al parecer el directorio «", "» no existe."]
  error_archivo: ["\nERROR: al parecer el archivo «", "» no existe."]
  error_archivo2: ["\nERROR: el archivo «", "» no tiene una extensión válida."]
  error_nombre: "\nERROR: ya existe una carpeta con el nombre indicado."

# pc-pandog
pandog: 
  v: "pandog 0.1.0"
  h: "\nPandog utiliza el poder de Pandoc para convertir archivos con elementos adicionales si se convierten de HTML, XHTML, HTM o XML a MD o visceversa.\n\nUso:\n  pc-pandog -i [nombre del archivo de entrada] -o [nombre del archivo de salida]\n\nParámetros necesarios:\n  -i = [input] Nombre del archivo a convertir.\n  -o = [output] Nombre para el archivo que se creará; si no se indica alguna ruta, el archivo se creará en el mismo directorio del archivo de entrada.\n\nParámetros únicos:\n  -v = [version] Muestra la versión.\n  -h = [help] Muestra esta ayuda.\n\nEjemplo:\n  pc-tegs -i directorio/al/archivo.md -o archivo.xhtml\n  Crea un archivo XHTML a partir de «archivo.md» presente en «directorio/al»."
  error_ext: "\nERROR: no se indicó el nombre de extensión para el archivo de salida."
  error_m: "\nERROR: no fue posible modificar el archivo."
  iniciando: "Iniciando conversión con Pandoc..."
  modificando: "Modificando el archivo creado por Pandoc..."

# pc-sandbox
sandbox: 
  v: "sandbox 0.1.0"
  h: "\nAYUDA"
  txt_marcado: "marcado.txt"
  txt_cifras: "cifras.txt"
  txt_uniones: "uniones.txt"
  txt_versales: "versales.txt"
  txt_estadisticas: "estadisticas.txt"
  fichero: "sandbox"
  fichero_interior: "analítica"
  divisor: "---------"
  e: ["Cantidad de palabras y cifras: ","Cantidad de palabras: ","Cantidad de palabras únicas: ","Índice de diversidad: ","Cantidad de cifras: ","Cantidad de cifras únicas: ","Cantidad de etiquetas: ","Cantidad de etiquetas únicas con atributos: ","Cantidad de etiquetas únicas sin atributos: ",". Etiqueta <",">:\n    Total: ","\n    Únicas: ","Tabla de palabras y frecuencia de uso",". Palabra «","»:\n    Frecuencia: ","\n    Porcentaje: "]
  advertencia_archivo: ["ADVERTENCIA: creando «","» en «","» para no comprometer el archivo original. Este archivo podrás convertirlo al formato deseado con Pandog..."]
  analizando: "Analizando cambios a realizar..."
  realizando: "Realizando cambios..."
  eliminando: ["  Eliminando «","»..."]
  reemplazando: ["  Reemplazando «","» con «", "»..."]
  error_carpeta: ["\nERROR: al parecer ya existe un análisis; para ingresar modificaciones usa la opción -c; para un nuevo análisis, elimina la carpeta «","»."]
  error_carpeta2: ["\nERROR: no se encontró ninguna carpeta «","» con los análisis."]
  error_carpeta3: ["\nERROR: no se encontró ninguna carpeta «","» en «", "» con los análisis."]
  error_archivo: ["\nERROR: al parecer el archivo «", "» en «", "» no existe."]
  error_archivo2: "\nERROR: al parecer no hay archivos con análisis."

# pc-tegs
tegs: 
  v: "tegs 0.1.0"
  h: "\nTegs utiliza el poder de Tesseract y de Ghostscript para crear archivos PDF con OCR o TXT a partir de imágenes TIFF, PNG o BMP.\n\nUso:\n  pc-tegs -d [directorio] -l [idioma] -o [nombre del archivo]\n\nParámetros necesarios:\n  -l = [language] Acrónimo del lenguaje a detectar. Es necesario instalar el lenguaje. Lista de acrónimos: https://github.com/tesseract-ocr/tesseract/blob/master/doc/tesseract.1.asc#languages\n  -o = [output] Nombre para el o los archivos que se crearán.\n\nParámetros opcionales:\n  -d = [directory] Directorio que contiene las imágenes.\n  -t = [text] Crea un TXT adicional al PDF creado.\n  -c = [compressed] Crea un PDF comprimido adcional al PDF creado.\n  -32 = [32 bits] SOLO WINDOWS, indica si la computadora es de 32 bits.\n\nParámetros únicos:\n  -v = [version] Muestra la versión.\n  -h = [help] Muestra esta ayuda.\n\nEjemplo sencillo:\n  pc-tegs -d directorio/de/las/imágenes -l spa -o prueba\n  Crea un archivo PDF con OCR en español y sin compresión a partir de las imágenes presentes en «directorio/de/las/imágenes».\n\nEjemplo con PDF comprimido:\n  pc-tegs -d directorio/de/las/imágenes -l spa -o prueba -c\n  Además del PDF con OCR, se crea otro PDF con compresión.\n\nEjemplo con archivo de texto:\n  pc-tegs -d directorio/de/las/imágenes -l spa -o prueba -t\n  Además del PDF con OCR, se crea un archivo de texto con el contenido de las imágenes.\n\nEjemplo con PDF comprimido y archivo de texto:\n  pc-tegs -d directorio/de/las/imágenes -l spa -o prueba -c -t\n  Además del PDF con OCR, se crea otro PDF con compresión y un archivo de texto."
  comprimido: "comprimido"
  procesando: ["Procesando "," de ","."]
  reconociendo: ["Reconociendo ","..."]
  extrayendo: ["Extrayendo texto de ","..."]
  uniendo_pdf: "Uniendo archivos pdf, esta operación puede durar varios minutos..."
  comprimiendo: ["Comprimiendo ",".pdf, esta operación puede durar varios minutos..."]
  uniendo_txt: "Uniendo archivos txt..."
  limpiando: "Limpiando directorio..."
  error: 
    te: "\nERROR: no fue posible iniciar Tesseract."
    gs: "\nERROR: no fue posible iniciar Ghostscript."
    
# pc-automata
automata:
  v: "automata 0.1.0"
  h: "\nAutomata automatiza el flujo de trabajo al poder usar todos los scripts para EPUB con una sola línea de comandos.\n\nUso para inicializar:\n  pc-automata --init\n  \nUso para automatizar:\n  pc-automata -f [archivo madre]\n\nParámetro necesario para la inicialización\n  --init = Crea la carpeta del proyecto y el archivo YAML necesarios para la automatización.\n\nParámetros opcionales para la inicialización\n  -o = [output] Nombre del proyecto.\n  --directory = Directorio donde se creará el proyecto.\n  \nParámetro necesario para la automatización\n  -f = [file] Archivo madre en MD, HTML, XHTML, XML o HTM.\n  \nParámetros opcionales para la autmatización\n  -c = [cover] Ruta a la imagen de portada que se desea incluir.\n  -d = [directory] Ruta al proyecto.\n  -i = [images] Ruta a la carpeta con las imágenes que se desean incluir.\n  -n = [notes] Archivo con las notas en formato MD.\n  -s = [style sheet] Ruta al archivo CSS que se desea incluir.\n  -y = [yaml] Ruta al archivo con los metadatos para el EPUB.\n  -32 = [32 bits] SOLO WINDOWS, indica si la computadora es de 32 bits.\n  --index = Índice con el que ha de comenzar la numeración de los archivos divididos.\n  --inner = SOLO HTML, incluye las notas al pie al final del archivo.\n  --reset =  Resetea el contador de las notas al pie cada vez que se modifica un archivo.\n  --section = Divide el archivo madre cada <section>.\n\nParámetros únicos:\n  -v = [version] Muestra la versión.\n  -h = [help] Muestra esta ayuda.\n  \nEjemplo sencillo:\n  pc-automata -f archivo-madre.md\n  Crea un proyecto EPUB, un EPUB 3.0.1, un EPUB 3.0.0 y un MOBI a partir del «archivo-madre.md».\n  \nEjemplo complejo:\n  pc-automata -f archivo-madre.md -n notas.md -d automata/ -c portada.jpg -i imagenes/ -s styles.css -y automata/meta-datos.yaml --section --reset --inner\n  Crea un proyecto EPUB, un EPUB 3.0.1, un EPUB 3.0.0 y un MOBI a partir del «archivo-madre.md», las notas al pie de «notas.md» adentro de cada archivo y con reinicio de numeración, la portada «portada.jpg», las hojas de estilos «styles.css» y los metadatos «automata/meta-datos.yaml», divididos cada etiqueta <section> y en un proyecto de pc-automata llamado «automata»."
  nombre: "epub-automata"
  prefijo: "automata_"
  init_archivo: ".automata_init"
  init_contenido: "Archivo para detectar que se trata de un proyecto de Automata, no borrar."
  log: "log.txt"
  creando: ["Creando carpeta del proyecto con el nombre «","»..."]
  eliminando: "Eliminando ficheros excepto los archivos YAML o TXT..."
  verificando: ["\nVerificando «","»..."]
  convirtiendo: ["\nConvirtiendo «","» a MOBI..."]
  epubcheck: "EpubCheck no pudo ser localizado, los EPUB no pueden ser verificados..."
  kindlegen: "\nKindleGen no pudo ser localizado, no fue posible crear un archivo MOBI..."
  pregunta: "La automatización solo permite la existencia de archivos YAML o TXT, ¿eliminar el resto de los archivos? [Y/n] "
  error_a: "\nERROR: proceso abortado por el usuario."
  error_e: ["\nERROR: al parecer la capeta «","» no es un proyecto para Automata."]
  error_r: ["\nERROR: algo salió mal, eliminando archivos creados...","ERROR: proceso abortado satisfactoriamente, un log ha sido creado para su análisis."]

# pc-creator
creator: 
  v: "creator 0.1.0"
  h: "\nCreator crea un proyecto para EPUB con distintas opciones.\n\nUso:\n  pc-creator\n\nParámetros opcionales:\n  -d = [directory] Directorio donde se creará el proyecto.\n  -o = [output] Nombre del proyecto.\n  -s = [style sheet] Ruta al archivo CSS que se desea incluir.\n  -c = [cover] Ruta a la imagen de portada que se desea incluir.\n  -i = [images] Ruta a la carpeta con las imágenes que se desean incluir.\n\nParámetros únicos:\n  -v = [version] Muestra la versión.\n  -h = [help] Muestra esta ayuda.\n\nEjemplo sencillo:\n  pc-creator\n  Crea un proyecto EPUB en el directorio actual y con el nombre «epub-creator».\n\nEjemplo en un directorio específico:\n  pc-creator -d directorio/deseado\n  Crea un proyecto EPUB en «directorio/deseado» y con el nombre «epub-creator».\n\nEjemplo en un directorio y nombre específicos:\n  pc-creator -d directorio/deseado -o proyecto_epub\n  Crea un proyecto EPUB en «directorio/deseado» y con el nombre «proyecto_epub».\n\nEjemplo en un directorio y nombre específicos, e incluyendo una hoja de estilo:\n  pc-creator -d directorio/deseado -o proyecto_epub -s ruta/al/archivo.css\n  Crea un proyecto EPUB como el ejemplo anterior, incluyendo la hoja de estilo «archivo.css» en lugar del CSS por defecto.\n\nEjemplo en un directorio y nombre específicos, e incluyendo una hoja de estilo y una portada:\n  pc-creator -d directorio/deseado -o proyecto_epub -s ruta/al/archivo.css -c ruta/a/la/portada.jpg\n  Crea un proyecto EPUB como el ejemplo anterior, incluyendo un XHTML que muestra la imagen de «portada.jpg».\n\nEjemplo en un directorio y nombre específicos, e incluyendo una hoja de estilo, una portada y varias imágenes:\n  pc-creator -d directorio/deseado -o proyecto_epub -s ruta/al/archivo.css -c ruta/a/la/portada.jpg -i ruta/al/directorio/con/imagenes\n  Crea un proyecto EPUB como el ejemplo anterior, incluyendo una copia de las imágenes presentes en «ruta/al/directorio/con/imagenes».\n  \nNota: también se generará «meta-data.yaml», que sirve para los metadatos del libro. Si se desconoce cómo usar el archivo, consúltese https://github.com/ColectivoPerroTriste/Herramientas/tree/master/EPUB/YAML. Si no se usará pc-recreator para generar el EPUB, este archivo es innecesario y puede eliminarse."
  epub_nombre: "epub-creator"
  aviso: "Se usa pc-recreator para completar este archivo."
  yaml: "---\n# Generales\ntitle: Sin título\nauthor: Anónimo\npublisher: \nsynopsis: \ncategory: \nversion: 1.0.0\ncover: \nnavigation: nav.xhtml\n\n# Tabla de contenidos\nno-toc: \nno-spine: \ncustom: \n\n# Fallbacks\nfallback: \n\n# Si se quiere EPUB fijo\npx-width: \npx-height: "
  xhtml_portada: "Portada"
  xhtml_portadilla: "Portadilla"
  xhtml_legal: "Legal"
  creando: ["Creando carpeta del EPUB con el nombre «","»..."]
  error_meta: "\nERROR: ya existe un archivo para metadatos. Para corregirlo, elimina o renombra el archivo."

# pc-divider
divider: 
  v: "divider 0.1.0"
  h: "\nDivider separa un documento HTML cada <h1> o <section>.\n\nUso:\n  pc-divider -f [archivo a dividir]\n\nParámetro necesario:\n  -f = [file] Archivo HTML, XHTML, XML o HTM a dividir.\n\nParámetros opcionales:\n  -d = [directory] Directorio donde se pondrán los archivos creados.\n  -s = [style sheet] Ruta al archivo CSS que se desea vincular.\n  -i = [index] Índice con el que ha de comenzar la numeración del nombre de los archivos creados.\n  --section = Divide el documento cada <section>.\n\nParámetros únicos:\n  -v = [version] Muestra la versión.\n  -h = [help] Muestra esta ayuda.\n\nEjemplo sencillo:\n  pc-divider -f archivo/a/dividir.xhtml\n  Dividirá el archivo «dividir.xhtml» cada <h1>, poniendo los archivos creados en el directorio actual y empezando con el índice número 3.\n\nEjemplo en un directorio específico:\n  pc-divider -f archivo/a/dividir.xhtml -d directorio/deseado\n  Dividirá como el ejemplo anterior, poniendo los archivos creados en «directorio/deseado».\n\nEjemplo en un directorio e incluyendo una hoja de estilo:\n  pc-divider -f archivo/a/dividir.xhtml -d directorio/deseado -s ruta/al/archivo.css\n  Dividirá como el ejemplo anterior, vinculando la hoja de estilo «archivo.css» en cada archivo creado.\n\nEjemplo en un directorio e incluyendo una hoja de estilo y con otro índice:\n  pc-divider -f archivo/a/dividir.xhtml -d directorio/deseado -s ruta/al/archivo.css -i 1\n  Dividirá como el ejemplo anterior, iniciando la numeración de los archivos con el número 1.\n\nEjemplo en un directorio, dividido cada <section> e incluyendo una hoja de estilo y con otro índice:\n  pc-divider -f archivo/a/dividir.xhtml -d directorio/deseado -s ruta/al/archivo.css -i 1 --section\n  Semejante al ejemplo anterior, solo que la división es cada <section> en lugar de cada <h1>."
  dividiendo: "Dividiendo archivos..."
  creando: ["Creando ", "..."]
  error_f: "\nERROR: el archivo no tiene una extensión válida (HTML, XHTML o HTM)."
  error_i: "\nERROR: solo se permiten números enteros para la opción -i."

# pc-notes
notes:
  v: "notes 0.1.0"
  h: "\nNotes agrega de manera automatizada las notas al pie a archivos con sintaxis tipo HTML o documentos TeX.\n\nUso:\n  pc-notes -f [archivo con las notas]\n\nParámetro necesario:\n  -f = [file] Archivo con las notas en formato MD.\n\nParámetros opcionales:\n  -d = [directory] Directorio donde se encuentran los archivos para añadir las notas.\n  -s = [style sheet] SOLO HTML, Ruta al archivo CSS que se desea incluir.\n  --reset =  Resetea el contador cada vez que se modifica un archivo.\n  --inner = SOLO HTML, incluye las notas al pie al final del archivo.\n\nParámetros únicos:\n  -v = [version] Muestra la versión.\n  -h = [help] Muestra esta ayuda.\n\nEjemplo sencillo:\n  pc-recreator -f directorio/a/notas.md\n  Añade las notas presentes en «notas.md» a los archivos que se encuentren en el directorio actual.\n \nEjemplo con un directorio específico:\n  pc-recreator -f directorio/a/notas.md -d directorio/html/o/tex\n  Añade las notas presentes en «notas.md» a los archivos que se encuentren en «directorio/html/o/tex».\n  \nEjemplo con un directorio específico y con una hoja de estilo:\n  pc-recreator -f directorio/a/notas.md -d directorio/html -s ruta/al/archivo.css\n  Igual que el ejemplo anterior pero se añade una hoja de estilo; ojo: se ignora si hay «--inner».\n  \nEjemplo con un directorio específico y reseteo de la numeración:\n  pc-recreator -f directorio/a/notas.md -d directorio/html/o/tex --reset\n  Añade las notas presentes en «notas.md» a los archivos que se encuentren en «directorio/html/o/tex» y el contador inicia en 1 en cada archivo.\n  \nEjemplo con un directorio específico, reseteo de la numeración e incrustado en los archivos:\n  pc-recreator -f directorio/a/notas.md -d directorio/html --reset --inner\n  Igual que el ejemplo anterior pero el contenido de las notas se añaden al final de cada archivo."
  comparando: "Comparando cantidad de notas..."
  anadiendo: "Añadiendo referencias a los archivos..."
  oculto: ".pc-notes"
  archivo_notas: "9999-notes.xhtml"
  archivo_notas_titulo: "Notas"
  nota_sup: "n-note-sup"
  nota_hr: "n-note-hr"
  nota_a: "n-note-a"
  nota_p: "n-note-p"
  nota_p2: "n-note-p2"
  error_f: "\nERROR: hay archivos con lenguajes de marcado no compatibles, verifique que solo sean archivos TeX o con sintaxis tipo HTML."
  error_c: ["\nERROR: la cantidad de notas al pie no coinciden.", " notas en «", "».", " notas en los archivos."]

# pc-recreator
recreator: 
  v: "recreator 0.1.0"
  h: "\nRecreator recrea los archivos OPF, NCX y NAV así como crea o recrea el archivo EPUB.\n\nUso:\n  pc-recreator\n\nParámetros opcionales:\n  -d = [directory] Directorio del proyecto EPUB.\n  -y = [yaml] Archivo de los metadatos para el EPUB.\n  -32 = [32 bits] SOLO WINDOWS, indica si la computadora es de 32 bits.\n\nParámetros únicos:\n  -v = [version] Muestra la versión.\n  -h = [help] Muestra esta ayuda.\n\nEjemplo sencillo:\n  pc-recreator\n  Crea un archivo EPUB buscando dentro del directorio actual los ficheros «epub-creator» y «meta-data.yaml».\n \nEjemplo con un proyecto EPUB específico:\n  pc-recreator -d directorio/para/epub\n  Crea un archivo EPUB de «directorio/para/epub» buscando dentro del directorio actual el fichero «meta-data.yaml».\n\nEjemplo con un proyecto EPUB y metadatos específicos:\n  pc-recreator -d directorio/para/epub -y archivo/meta-datos.yaml\n  Crea un archivo EPUB de «directorio/para/epub» usando el fichero «archivo/meta-datos.yaml».\n  \nNota: se requiere un archivo YAML con una estructura específica para poder general el EPUB. Si se desconoce esta información, consúltese https://github.com/ColectivoPerroTriste/Herramientas/tree/master/EPUB/YAML."
  nuevo: " nuevo "
  recreando_opf: "Recreando OPF..."
  recreando_ncx: "Recreando NCX..."
  recreando_nav: "Recreando NAV..."
  recreando_fijo: ["EPUB fijo detectado de ",", agregando cambios a los XHTML..."]
  recreando_portadilla: "001-portadilla.xhtml"
  recreando_legal: "002-legal.xhtml"
  recreando_autoria: "Autoría"
  eliminando_viewports: "Eliminando viewports para evitar conflictos con el EPUB fluido..."
  eliminando_epub: "Eliminando EPUB previo..."
  creando_epub: ["Creando","EPUB en «","» con el nombre «","»..."]
  advertencia_fijo: ["ADVERTENCIA: «","» no tiene valor, ignorando medidas para el EPUB fijo..."]
  error_y: ["\nERROR: al parecer el archivo «","» no tiene una sintaxis correcta."]
  error_e: ["\nERROR: al parecer la capeta «","» no es un proyecto para EPUB."]
  error_a: ["\nERROR: no se encontró un archivo ","."]
  error_m: "\nERROR: problema con las medidas para el EPUB fijo."
  error_t: "\nERROR: el metadato «title» en el archivo YAML es obligatorio."

# pc-changer
changer:
  v: "changer 0.1.0"
  h: "\nAYUDA"
  sufijo: "_3-0-0"
